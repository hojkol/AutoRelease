name: Sync rel-notes.md to drun-docs

on:
  workflow_dispatch:  # 支持手动触发
  schedule:
    # 这里使用UTC时间，北京时间10点是UTC 2点
    - cron: '0 2 * * *'  # 每天UTC 2点执行，即北京时间10点

jobs:
  sync-rel-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout fork repo
        env:
          FORK_PAT: ${{ secrets.MY_ACCESS_TOKEN }}  # 你的fork仓库PAT，需写权限
          FORK_REPO: ${{ secrets.FORK_REPO }}
          UPSTREAM_REPO: ${{ secrets.TARGET_REPO }}
        run: |
          git clone https://x-access-token:${FORK_PAT}@github.com/${FORK_REPO}.git fork_repo
          cd fork_repo
          git remote add upstream https://github.com/${UPSTREAM_REPO}.git
          git fetch upstream
          git reset --hard upstream/main
          git push origin main --force

      - name: Clone updated fork repo
        env:
          FORK_PAT: ${{ secrets.MY_ACCESS_TOKEN }}
          FORK_REPO: ${{ secrets.FORK_REPO }}
        run: |
          rm -rf fork_repo
          git clone https://x-access-token:${FORK_PAT}@github.com/${FORK_REPO}.git fork_repo

      - name: Compare rel-notes.md files
        id: compare
        run: |
          if cmp -s rel-notes.md fork_repo/docs/zh/docs/rel-notes.md; then
            echo "files_are_same=true" >> $GITHUB_OUTPUT
          else
            echo "files_are_same=false" >> $GITHUB_OUTPUT
          fi

      - name: Copy rel-notes.md if changed
        if: steps.compare.outputs.files_are_same == 'false'
        run: |
          cp rel-notes.md fork_repo/docs/zh/docs/rel-notes.md

      # ... 前面步骤不变

      - name: Commit and push changes to fork
        if: steps.compare.outputs.files_are_same == 'false'
        env:
          FORK_PAT: ${{ secrets.MY_ACCESS_TOKEN }}
          FORK_REPO: ${{ secrets.FORK_REPO }}
          MY_USER_NAME: ${{ secrets.MY_USER_NAME }}
          MY_USER_EMAIL: ${{ secrets.MY_USER_EMAIL }}
        run: |
          cd fork_repo
          git config user.name "${MY_USER_NAME}"
          git config user.email "${MY_USER_EMAIL}"
          git checkout -b update-rel-notes || git checkout update-rel-notes
          git add docs/zh/docs/rel-notes.md
          if ! git diff --cached --quiet; then
            git commit -m "Update rel-notes.md via automation"
            git push https://x-access-token:${FORK_PAT}@github.com/${FORK_REPO}.git update-rel-notes --force
          else
            echo "No changes to commit"
          fi

      - name: Create Pull Request via GitHub API
        if: steps.compare.outputs.files_are_same == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
          UPSTREAM_REPO: ${{ secrets.TARGET_REPO }}
          FORK_REPO: ${{ secrets.FORK_REPO }}
        run: |
          UPSTREAM_OWNER=$(echo $UPSTREAM_REPO | cut -d'/' -f1)
          UPSTREAM_REPO_NAME=$(echo $UPSTREAM_REPO | cut -d'/' -f2)
          FORK_OWNER=$(echo $FORK_REPO | cut -d'/' -f1)
          PR_BRANCH="update-rel-notes"
          PR_TITLE="Testing automated update of rel-notes.md, please ignore it."
          PR_BODY="This PR updates rel-notes.md automatically every day."

          existing_pr=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$UPSTREAM_OWNER/$UPSTREAM_REPO_NAME/pulls?head=$FORK_OWNER:$PR_BRANCH&state=open" | jq '. | length')

          if [ "$existing_pr" -gt 0 ]; then
            echo "Pull request already exists. Skipping creation."
            exit 0
          fi

          response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$UPSTREAM_OWNER/$UPSTREAM_REPO_NAME/pulls \
            -d @- <<EOF
          {
            "title": "$PR_TITLE",
            "head": "$FORK_OWNER:$PR_BRANCH",
            "base": "main",
            "body": "$PR_BODY"
          }
          EOF
          )

          pr_url=$(echo "$response" | jq -r '.html_url')
          if [ "$pr_url" = "null" ]; then
            echo "Failed to create pull request:"
            echo "$response"
            exit 1
          else
            echo "Pull request created: $pr_url"
          fi


